# -*- coding: utf-8 -*-
"""sentiment_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z3XyG78UME0sKxs31AwM6Mnzf9W8I1h4
"""

import pandas as pd
import numpy as np

data = pd.read_csv('/content/drive/MyDrive/Train.csv')

data.head()

df = data.copy()

df.shape

import nltk
import re
nltk.download('stopwords')
from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer

corpus = []
ps = PorterStemmer()

for i in range(0,df.shape[0]):

  # Cleaning special character from the message
  message = re.sub(pattern='[^a-zA-Z]', repl=' ', string=df.text[i])
  
  # Converting the entire message into lower case
  message = message.lower()

  # Tokenizing the review by words
  words = message.split()
  

  # Removing the stop words
  words = [word for word in words if word not in set(stopwords.words('english'))]
  # Stemming the words
  words = [ps.stem(word) for word in words]
  # Joining the stemmed words
  message = ' '.join(words)
 
  # Building a corpus of messages
  corpus.append(message)
print(corpus)

from sklearn.feature_extraction.text import CountVectorizer

cv = CountVectorizer(max_features=2500)
X = cv.fit_transform(corpus).toarray()

from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(max_features=2500)
X = cv.fit_transform(corpus).toarray()
y=df['label']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=0)

# Fitting Naive Bayes to the Training set
from sklearn.naive_bayes import MultinomialNB
classifier = MultinomialNB(alpha=0.3)
classifier.fit(X_train, y_train)

from sklearn.linear_model import LogisticRegressionCV
clf=LogisticRegressionCV().fit(X_train,y_train)
y_pred = clf.predict(X_test)
from sklearn import metrics

# Model Accuracy, how often is the classifier correct?
print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

y_predict = classifier.predict(X_test)
from sklearn import metrics

# Model Accuracy, how often is the classifier correct?
print("Accuracy:",metrics.accuracy_score(y_test, y_predict))

filename = 'sen-mnb-model.pkl'
pickle.dump(classifier, open(filename, 'wb'))
pickle.dump(cv, open('cv-transfor.pkl', 'wb'))

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(x, Y, test_size=0.20, random_state=0)

# Fitting Naive Bayes to the Training set
from sklearn.naive_bayes import MultinomialNB
classifier = MultinomialNB(alpha=0.3)
classifier.fit(X_train, y_train)

y_predict = classifier.predict(X_test)
from sklearn import metrics

# Model Accuracy, how often is the classifier correct?
print("Accuracy:",metrics.accuracy_score(y_test, y_predict))

from sklearn.linear_model import LogisticRegressionCV
clf=LogisticRegressionCV().fit(X_train,y_train)
y_pred = clf.predict(X_test)
from sklearn import metrics

# Model Accuracy, how often is the classifier correct?
print("Accuracy:",metrics.accuracy_score(y_test, y_pred))

pickle.dump(cv, open('cv-trans.pkl', 'wb'))

filename = 'sentiment-mnb-model.pkl'
pickle.dump(classifier, open(filename, 'wb'))

y_predict = classifier.predict(X_test)

y_predict

data.iloc[:,0][4]

